#!/bin/env bash
#   Name: Prompt Management System (PMS)
# Author: Johnneylee Jack Rollins
#   Date: Monday, May 16th 2011
shopt -s checkwinsize


# A little workaround to prevent people from using the prompt on anything but
# bash, as I'm a dolt who can't actually write cross-shell scripts.
if [ ! -z $BASH ] ; then
script_base="`dirname $BASH_SOURCE`"
. "$script_base/base/support"
else
echo "This script isn't quite ready for your shell yet."
script_base="`dirname $0`"
. "$script_base/base/support"

fi

# These are the lines of your prompt. Currently, there I haven't been clever
# enough to make them automatically add the newline after them, so if you would
# be so kind to make sure that happens, we can be good friends.
prompt_line_one() {
printf $blue"["$reset
username
prompt_for_git
printf $blue"]"$reset"\n"
}

prompt_line_two() {
source $script_base/plugins/rvm
prompt_for_rvm
}

# There has to be at least something in each function, so I just leave somehting
# in here to satisfy that requirement.

prompt_line_three() {
cwd
emblem
}

## Git
prompt_for_git() {
git --version > /dev/null 2>&1;
if [ "$?" -ne "0" ]; then \
  return
else
  if [ -d .git ]; then
    source $script_base/plugins/git
    prompt_for_git_branch
    prompt_for_git_stashes
    prompt_for_git_cleanliness
  fi
fi

}

# This is the nifty symbol at the end of your prompt. The documentation for
# check_for_unicode is in base/support.
emblem() {
printf $teal
check_for_unicode âš¡ $
printf " "$reset
}

# Here is where you choose which lines you wish to have in your prompt. Simply
# comment out the ones you don't want and everything should be peachy.
load_functions() {
prompt_line_one
#prompt_line_two
prompt_line_three
}

# Haha, where all the magic happens. This shouldn't be too hard to understand.
PS1='`load_functions`'
